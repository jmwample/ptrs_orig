
name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Verify code Fromatting
    runs-on: "ubuntu-latest"
    steps:
    - uses: actions/checkout@v3
    - name: Format
      run: cargo fmt --all -- --check

  lint:
    name: Lint with clippy
    needs: format
    strategy:
      fail-fast: true
    runs-on: "ubuntu-latest"
    env:
      RUSTFLAGS: -Dwarnings

    steps:
    - uses: actions/checkout@v3
    - name: Lint
      run: cargo clippy --workspace --all-targets --verbose --all-features

  build:
    name: Test and Build WASM
    needs: format
    # needs: [format, lint]
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest", "macos-latest" ]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    # Build for WATER host
    - name: Build WATER Host crate
      run: cargo build
      working-directory: crates/water

    # install wasm32-wasi target
    - name: Add wasm32-wasi target
      run: rustup target add wasm32-wasi

    # Build for wasm32-wasi target
    - name: Build wasm32-wasi Target
      run: |
        for member in crates/wasm/ examples/water_bins/ss_client_wasm_v1/ examples/water_bins/echo_client/; do
          cargo build --verbose --manifest-path $member/Cargo.toml --target wasm32-wasi
        done
      env:
        RUSTFLAGS: --cfg tokio_unstable

    - name: Test
      run: cargo test --verbose --workspace --all-features