
name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Verify code Fromatting
    runs-on: "ubuntu-latest"
    steps:
    - uses: actions/checkout@v3
    - name: Format
      run: cargo fmt --all -- --check

  lint:
    name: Lint with clippy
    needs: format
    strategy:
      fail-fast: true
    runs-on: "ubuntu-latest"
    env:
      RUSTFLAGS: -Dwarnings

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    - name: Lint
      run: cargo clippy --workspace --all-targets --verbose --all-features

  build:
    name: Test and Build WASM
    needs: format
    # needs: [format, lint]
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest", "macos-latest" ]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    # Build ptrs library
    - name: Build library
      run: cargo build

    # Build ptrs proxy PoC
    - name: Build library
      run: cargo build --bin proxy --release

    - name: Test
      run: cargo test --verbose --workspace --all-features
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    - name: rust-grcov
      # You may pin to the exact commit or the version.
      # uses: actions-rs/grcov@bb47b1ed7883a1502fa6875d562727ace2511248
      uses: actions-rs/grcov@v0.1
    - name: Codecov
      # You may pin to the exact commit or the version.
      # uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
      uses: codecov/codecov-action@v4-beta
      env:
        CODECOV_TOKEN: ${{ secrets.PTRS_CODECOV_TOKEN }}
      with:
        # Repository upload token - get it from codecov.io. Required only for private repositories
        # token: # optional
        # Specify whether the Codecov output should be verbose
        verbose: true
        fail_ci_if_error: true